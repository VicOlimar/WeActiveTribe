# frozen_string_literal: true

platform :ios, '13.2'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

target 'WeActiveTribe' do # rubocop:disable Metrics/BlockLength
  # Pods for WeActiveTribe
  pod 'FBLazyVector', path: '../node_modules/react-native/Libraries/FBLazyVector'
  pod 'FBReactNativeSpec', path: '../node_modules/react-native/Libraries/FBReactNativeSpec'
  pod 'RCTRequired', path: '../node_modules/react-native/Libraries/RCTRequired'
  pod 'RCTTypeSafety', path: '../node_modules/react-native/Libraries/TypeSafety'
  pod 'RNDateTimePicker', path: '../node_modules/@react-native-community/datetimepicker/RNDateTimePicker.podspec'
  pod 'React', path: '../node_modules/react-native/'
  pod 'React-Core', path: '../node_modules/react-native/'
  pod 'React-CoreModules', path: '../node_modules/react-native/React/CoreModules'
  pod 'React-Core/DevSupport', path: '../node_modules/react-native/'
  pod 'React-RCTActionSheet', path: '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', path: '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', path: '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', path: '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', path: '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', path: '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', path: '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', path: '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', path: '../node_modules/react-native/Libraries/Vibration'
  pod 'React-Core/RCTWebSocket', path: '../node_modules/react-native/'

  pod 'React-cxxreact', path: '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', path: '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', path: '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', path: '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'ReactCommon/jscallinvoker', path: '../node_modules/react-native/ReactCommon'
  pod 'ReactCommon/turbomodule/core', path: '../node_modules/react-native/ReactCommon'
  pod 'Yoga', path: '../node_modules/react-native/ReactCommon/yoga'

  pod 'DoubleConversion', podspec: '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', podspec: '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', podspec: '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  pod 'BVLinearGradient', path: '../node_modules/react-native-linear-gradient'

  pod 'RNSVG', path: '../node_modules/react-native-svg'

  pod 'BugsnagReactNative', path: '../node_modules/bugsnag-react-native'

  use_native_modules!
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |build_config|
      build_config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
      build_config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
      build_config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      build_config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      build_config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET' # inherit from project
    end
  end
  ## Fix for XCode 12.5
  find_and_replace('../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm',
                   '_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules', '_initializeModules:(NSArray<Class> *)modules')
  find_and_replace('../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm',
                   'RCTBridgeModuleNameForClass(module))', 'RCTBridgeModuleNameForClass(Class(module)))')
end

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
    text = File.read(name)
    replace = text.gsub(findstr, replacestr)
    next unless text != replace

    puts "Fix: #{name}"
    File.open(name, 'w') { |file| file.puts replace }
    STDOUT.flush
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end
